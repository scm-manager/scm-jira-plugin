{
  "scm-jira-plugin": {
    "global": {
      "nav-link": "Jira",
      "title": "Global Jira Configuration"
    },
    "local": {
      "nav-link": "Jira",
      "title": "Jira Configuration"
    },
    "form": {
      "url": "URL",
      "urlHelp": "URL of Jira installation (with context path).",
      "urlValidationError": "URL is invalid",
      "disableRepositoryConfiguration": "Do not allow repository configuration",
      "disableRepositoryConfigurationHelp": "Do not allow repository owners to configure jira instances. You have to restart your application server after changing this value.",
      "updateJiraIssues": "Update Jira Issues",
      "updateJiraIssuesHelp": "Enable the automatic update function. SCM-Manager searches for issue keys in commit messages. If a issue id is found SCM-Manager updates the issue with a comment. Note: It is necessary to configure the username and password below.",
      "username": "Username",
      "usernameHelp": "Jira username for connection.",
      "password": "Password",
      "passwordHelp": "Jira password for connection.",
      "filter": "Project Filter",
      "filterHelp": "Filters for jira project key. Multiple filters separated by \",\". e.g.: SCM,TST,ASD",
      "roleLevel": "Role Visibility",
      "roleLevelHelp": "Defines for which Project Role the comments are visible. Note: The name must be a valid jira role name.",
      "autoClose": "Enable Status Modification",
      "autoCloseHelp": "Enable the status modification function. SCM-Manager searches for issue keys and status modification words. If both are found in a message SCM-Manager changes the status of the issue. Note: It is necessary to configure the username and password.",
      "autoCloseMapping": {
        "title": "Jira transition mapping",
        "help": "Map keywords to Jira transitions in order to trigger state changes with those keywords.",
        "transition": "Jira transition",
        "transitionHelp": "Name of Jira transition which should be mapped e.g.: Done",
        "keywords": "Keywords",
        "keywordsHelp": "Comma separated list of keywords which are mapped to the Jira transition e.g.: closes, closing",
        "no-mapping": "No mappings defined",
        "add": "Add mapping",
        "remove": "Remove mapping"
      }
    },
    "configurationChangedSuccess": "Configuration changed"
  },
  "permissions": {
    "configuration": {
      "read,write": {
        "jira": {
          "displayName": "Modify global Jira configuration",
          "description": "May modify the global Jira configuration"
        }
      }
    },
    "repository": {
      "jira": {
        "*": {
          "displayName": "Modify repository specific Jira configuration",
          "description": "May modify the repository specific Jira configuration for all repositories"
        }
      }
    }
  },
  "verbs": {
    "repository": {
      "jira": {
        "displayName": "configure Jira",
        "description": "May modify the repository specific Jira configurations"
      }
    }
  },
  "validation": {
    "JiraCommitMessageIssueKeyValidator": {
      "name": "Jira Issue Key Validator",
      "branches": "{{ branches }}",
      "allBranches": "<all branches>",
      "description": "Uses issue key pattern from Jira plugin configuration",
      "defaultErrorMessage": "<default error message>"
    }
  },
  "validator": {
    "JiraCommitMessageIssueKeyValidator": {
      "name": "Jira Issue Key Validator",
      "description": "Use this to validate each commit message for Jira issue keys.",
      "branches": {
        "label": "Branches",
        "helpText": "List of the branches which should be validated separated by comma. Leave blank to validate all branches.\nExample: master,feature/*"
      }
    }
  }
}
